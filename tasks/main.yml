---

- name: Load variables based on OS type
  ansible.builtin.include_tasks: vars.yml

- name: Install python3  # noqa var-naming[no-role-prefix]
  ansible.builtin.include_role:
    name: deitkrachten.python
  vars:
    python2: false
    python3: true
    python38: "{{ molecule_python38 }}"
    python39: "{{ molecule_python39 }}"
    python311: "{{ molecule_python311 }}"
  when: molecule_python_install | bool

- name: Uninstall python3 packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: absent
  loop:
    - python3-pyyaml

- name: Install OS packages globally
  ansible.builtin.package:
    name: "{{ molecule_os_packages }}"
    state: present
  become: yes

- name: Setup virtual enviromments
  ansible.builtin.include_role:
    name: deitkrachten.python
  vars:
    python_virtualenv_root: "{{ molecule_venv_root }}"
    # python_virtualenvs: "{{ molecule_venvs_empty }}"
    python_virtualenvs: "{{ molecule_venvs }}"
  when: molecule_python_venv | bool
  tags: molecule-idempotence-notest

#- name: Install latest version of wheel/setuptools
#  ansible.builtin.pip:
#    name:
#      - wheel
#      - setuptools
#    executable: "{{ molecule_venv_root }}/{{ item.name }}/bin/pip3"
#    extra_args: "--upgrade"
#  become: yes
#  become_user: "{{ molecule_virtualenv_user | default('root') }}"
#  loop: "{{ molecule_venvs_empty }}"
#
#- name: Work-around for pyyaml
#  ansible.builtin.pip:
#    name:
#      - "cython<3.0.0"
#      - "pyyaml<6"
#    executable: "{{ molecule_venv_root }}/{{ item.name }}/bin/pip3"
#    extra_args: "--no-build-isolation"
#  become: yes
#  become_user: "{{ molecule_virtualenv_user | default('root') }}"
#  loop: "{{ molecule_venvs_empty }}"
#
#- name: Install ansible/molecule into virtual environments  # noqa var-naming[no-role-prefix]
#  ansible.builtin.include_role:
#    name: deitkrachten.python
#  vars:
#    python_virtualenv_root: "{{ molecule_venv_root }}"
#    python_virtualenvs: "{{ molecule_venvs }}"
#  when: molecule_python_venv | bool
#  tags: molecule-idempotence-notest

- name: Distribute all support scripts & files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /usr/local/bin/{{ item }}
    mode: "0755"
  become: yes
  loop:
    - ansible-collections.sh
    - ansible-fix.sh
    - ansible-galaxy.sh
    - ansible-lint.sh
    - ansible-requirements-clean.sh
    - functions_ansible.sh
    - functions.sh
    - molecule-test.sh
    - venv-wrapper.sh

- name: Setup symlinks
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    state: link
    force: true
  loop:
    - src: /usr/local/bin/venv-wrapper.sh
      dest: /usr/local/bin/ansible
    - src: /usr/local/bin/venv-wrapper.sh
      dest: /usr/local/bin/ansible7
    - src: /usr/local/bin/venv-wrapper.sh
      dest: /usr/local/bin/ansible8
    - src: /usr/local/bin/venv-wrapper.sh
      dest: /usr/local/bin/molecule
    - src: /usr/local/bin/venv-wrapper.sh
      dest: /usr/local/bin/ansible-playbook
    - src: /usr/local/bin/venv-wrapper.sh
      dest: /usr/local/bin/ansible-galaxy
    - src: /usr/local/bin/venv-wrapper.sh
      dest: /usr/local/bin/ansible-lint
    - src: /usr/local/bin/venv-wrapper.sh
      dest: /usr/local/bin/yamllint
